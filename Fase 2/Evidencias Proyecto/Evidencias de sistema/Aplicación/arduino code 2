#include <ESP8266WiFi.h>
#include <HX711.h>
#include <ESP8266WebServer.h>

// Definir los pines donde se conecta el HX711
#define LOADCELL_DOUT_PIN  D4
#define LOADCELL_SCK_PIN   D5

// Definir las credenciales WiFi
const char* ssid = "tzuyu";     // Tu red WiFi
const char* password = "12345677";    // Tu contraseña WiFi

HX711 scale;

// Crear un objeto servidor en el puerto 80
ESP8266WebServer server(80);

void setup() {
  // Inicializa la comunicación serial
  Serial.begin(115200);
  delay(10);

  // Conecta la ESP8266 a la red WiFi
  WiFi.begin(ssid, password);
  
  // Espera hasta que se conecte al WiFi
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  // Muestra la dirección IP de la ESP8266 en el monitor serial
  Serial.println("Conectado al WiFi");
  Serial.print("IP: ");
  Serial.println(WiFi.localIP());

  // Inicializa el sensor de peso HX711
  scale.begin(LOADCELL_DOUT_PIN, LOADCELL_SCK_PIN);
  scale.set_scale(); // Establece una escala de calibración predeterminada
  scale.tare(); // Pone a cero el valor de la báscula

  // Configura el servidor para manejar solicitudes HTTP en la raíz
  server.on("/", HTTP_GET, handleWeight);  // Maneja la solicitud en la raíz "/"
  
  // Inicia el servidor web
  server.begin();
}

void loop() {
  // Maneja las solicitudes del cliente
  server.handleClient();
}

// Función para manejar la solicitud en la raíz "/"
void handleWeight() {
  long weight = scale.get_units(10);  // Lee el peso promedio de 10 lecturas
  
  // Devuelve el peso como respuesta en formato JSON
  String response = "{\"peso\": " + String(weight) + "}";
  
  server.send(200, "application/json", response);  // Envía la respuesta en formato JSON
}
